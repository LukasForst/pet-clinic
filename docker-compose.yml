version: '3.7'

services:
  ## Database
  mysql-db:
    image: mysql:5.7.29
    restart: on-failure
    container_name: mysql-database
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    networks:
      - petclinic-network
    ports:
      - 3306:3306

  config-server:
    image: springcommunity/spring-petclinic-config-server
    container_name: config-server
    networks:
      - petclinic-network
    ports:
      - 8888:8888
    deploy:
      resources:
        limits:
          memory: 512M

  discovery-server:
    image: springcommunity/spring-petclinic-discovery-server
    container_name: discovery-server
    depends_on:
      - config-server
    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    networks:
      - petclinic-network
    ports:
      - 8761:8761
    deploy:
      resources:
        limits:
          memory: 512M

  customers-service:
    image: springcommunity/spring-petclinic-customers-service
    container_name: customers-service
    depends_on:
      - mysql-db
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    networks:
      - petclinic-network
    ports:
      - 8081:8081
    deploy:
      resources:
        limits:
          memory: 512M

  visits-service:
    image: springcommunity/spring-petclinic-visits-service
    container_name: visits-service
    depends_on:
      - mysql-db
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    networks:
      - petclinic-network
    ports:
      - 8082:8082
    deploy:
      resources:
        limits:
          memory: 512M

  vets-service:
    image: springcommunity/spring-petclinic-vets-service
    container_name: vets-service
    depends_on:
      - mysql-db
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    networks:
      - petclinic-network
    ports:
      - 8083:8083
    deploy:
      resources:
        limits:
          memory: 512M

  api-gateway:
    image: springcommunity/spring-petclinic-api-gateway
    container_name: api-gateway
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    networks:
      - petclinic-network
    ports:
      - 8080:8080
    deploy:
      resources:
        limits:
          memory: 512M

  tracing-server:
    image: openzipkin/zipkin
    container_name: tracing-server
    environment:
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    networks:
      - petclinic-network
    ports:
      - 9411:9411
    deploy:
      resources:
        limits:
          memory: 512M

  admin-server:
    image: springcommunity/spring-petclinic-admin-server
    container_name: admin-server
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    networks:
      - petclinic-network
    ports:
      - 9090:9090
    deploy:
      resources:
        limits:
          memory: 512M

  ## Grafana / Prometheus
  grafana-server:
    build: ./docker/grafana
    container_name: grafana-server
    networks:
      - petclinic-network
    ports:
      - 3000:3000
    deploy:
      resources:
        limits:
          memory: 256M

  prometheus-server:
    build: ./docker/prometheus
    container_name: prometheus-server
    networks:
      - petclinic-network
    ports:
      - 9091:9090
    deploy:
      resources:
        limits:
          memory: 256M

networks:
  petclinic-network:
    driver: bridge
